"""Initial migration including all tables

Revision ID: 9350a45866c5
Revises:
Create Date: 2025-09-06 16:05:11.915876

"""
from typing import Sequence, Union
# fmt: off
from alembic import op  # noqa
import sqlalchemy as sa  # noqa
import sqlmodel  # EDITED  # noqa
from sqlalchemy.dialects import postgresql
# fmt: off

# revision identifiers, used by Alembic.
revision: str = '9350a45866c5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id'))
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)

    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('account_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id'))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    op.create_table('user_roles',
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('assigned_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'role_id'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
